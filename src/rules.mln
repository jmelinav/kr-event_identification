//Group(person,person,person,person)
//Leader(grpno,person)
//Visitor(grpno,person)

person ={P0,P1,P2,P3,P4}
time={0,...,10}
xLoc={0,...,1234566}
yLoc={0,...,1234566}

distX={0,...,1234566}
distY={0,...,1234566}

Leader(person)
Visitor(person)
PartOfSameGroup(person,person,time)
PositionOf(person,xLoc,yLoc,time)
moving(person,time)
stop(person,time)
Distance(person,person,distX,distY,time)


PositionOf(p,x,y,t) ^ PositionOf(p,x1,y1,succ(t)) ^ (x1!=x v y1!=y1) => moving(p,t)
!moving(p,t) => stop(p,t)

//distance calculation
PositionOf(p1,x1,y1,t) ^ PositionOf(p2,x2,y2,t) ^ x1<x2 ^ y1<y2 ^ p1!=p2 => Distance(p1,p2,minus(x2,x1),minus(y2,y1),t)
PositionOf(p1,x1,y1,t) ^ PositionOf(p2,x2,y2,t) ^ x2<x1 ^ y1<y2 ^ p1!=p2 => Distance(p1,p2,minus(x1,x2),minus(y2,y1),t)
PositionOf(p1,x1,y1,t) ^ PositionOf(p2,x2,y2,t) ^ x1<x2 ^ y2<y1 ^ p1!=p2 => Distance(p1,p2,minus(x2,x1),minus(y1,y2),t)
PositionOf(p1,x1,y1,t) ^ PositionOf(p2,x2,y2,t) ^ x2<x1 ^ y2<y1 ^ p1!=p2 => Distance(p1,p2,minus(x1,x2),minus(y1,y2),t)

//part of same group
Distance(p1,p2,x,y,t) ^ x <=100 ^ y<=100 => PartOfSameGroup(p1,p2,t)

//visitor
Distance(p1,p2,x,y,t) ^ x <=20 ^ y<=20 ^ PartOfSameGroup(p1,p2,t) => Visitor(p1)

//leader
Distance(p1,p2,x,y,t) ^ x>25 ^ y>25 ^ PartOfSameGroup(p1,p2,t)=> Leader(p1)

//group

//PartOfSameGroup(p1,p2,t) ^ PartOfSameGroup(p3,p4,t) ^ p1!=p2 ^ p2!=p3 ^ p3!=p4 ^ p4!=p1 ^ p4!=p2 ^ p1!=p3 => group(p1,p2,p3,p4)